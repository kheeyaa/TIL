// 1. 계단 오르기
// 철수는 계단을 오를 때 한 번에 한 계단 또는 두 계단씩 올라간다. 만약 총 4계단을 오른다면
// 그 방법의 수는
// 1+1+1+1, 1+1+2, 1+2+1, 2+1+1, 2+2 로 5가지이다.
// 그렇다면 총 N계단일 때 철수가 올라갈 수 있는 방법의 수는 몇 가지인가?

// ▣ 입력설명
// 매개변수 n에 계단의 개수인 자연수 N(3≤N≤30)이 주어집니다.
// ▣ 출력설명
// 올라가는 방법의 수를 반환합니다.
// ▣ 매개변수 형식 1
// 7
// ▣ 반환값 형식 1
// 21

// 1. 계단 N개가 아닌, 계단 1개, 2개로 생각해보자 (계단은 한 계단 또는 두 계단 올라가니까)
// 계단 1칸 : 1 / 계단 2칸 : 2

// 2. 계단 3칸 ? 1칸에서 오거나, 2칸에서 오는 경우 2가지

// 3. 계단 4칸? 2칸에서 오거나, 3칸에서 오거나

// dy = [ , , , , , , ]
// dy[i] : i번 계단 까지 오르는 방법의 수
// 초기화 필요 : dy[1] = 1, dy[2] = 2

{
  function solution(n) {
    let dy = Array.from({ length: n + 1 });
    // 초기화
    dy[1] = 1;
    dy[2] = 2;

    for (let i = 3; i <= n; i++) {
      dy[i] = dy[i - 1] + dy[i - 2];
    }
    answer = dy[n];
    return answer;
  }
  //console.log(solution(7)); // 21
}
